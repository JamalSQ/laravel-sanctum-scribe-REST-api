## Autogenerated by Scribe. DO NOT MODIFY.

name: Companies
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/companies
    metadata:
      groupName: Companies
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the list of companies.'
      description: 'This endpoint returns all registered companies.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "result": [
              {
                "id": 1,
                "name": "Company A",
                "email": "companya@example.com",
                "address": "123 Street",
                "phoneNo": "12345678901"
              }
            ],
            "message": "Records retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/companies
    metadata:
      groupName: Companies
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new company.'
      description: 'Creates a new company record with the provided data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Max 500 characters.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Unique email address.'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: 'Max 500 characters.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phoneNo:
        name: phoneNo
        description: 'Exactly 11 digits.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      email: qkunze@example.com
      address: consequatur
      phoneNo: consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Company created successfully",
            "result": {
              "id": 1,
              "name": "Bob",
              "email": "bob@gmail.com",
              "address": "One Unit chock",
              "phoneNo": "34223423429"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Unable to create Company",
            "errors": {
              "email": ["The email has already been taken."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/companies/{id}'
    metadata:
      groupName: Companies
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a specific company.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      company:
        name: company
        description: 'The ID of the company.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      company: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Company retrieved successfully",
            "result": {
              "id": 1,
              "name": "Company A",
              "email": "companya@example.com",
              "address": "123 Street",
              "phoneNo": "12345678901"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "Company not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/companies/{id}'
    metadata:
      groupName: Companies
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a specific company.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      company:
        name: company
        description: 'The ID of the company.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      company: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Max 500 characters.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Unique email address.'
        required: false
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: 'Max 500 characters.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phoneNo:
        name: phoneNo
        description: 'Exactly 11 digits.'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      email: qkunze@example.com
      address: consequatur
      phoneNo: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Company updated successfully",
            "result": {
              "id": 1,
              "name": "Updated Company",
              "email": "updated@example.com",
              "address": "Updated Address",
              "phoneNo": "12345678901"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "Company not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "error": "Failed to update company",
            "details": "Validation failed or other error messages"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/companies/{id}'
    metadata:
      groupName: Companies
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific company.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the company.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      company:
        name: company
        description: 'The ID of the company.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      company: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Company deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "error": "Company not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "error": "Failed to delete company",
            "details": "Exception message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
